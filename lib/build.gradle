/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    jcenter()
}

test {
	useJUnitPlatform();
}

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(17))
  }
}

dependencies {
	compileJava.options.encoding = 'UTF-8'
	//compileJava {options.encoding = "UTF-8"}
	//compileTestJava {options.encoding = "UTF-8"}
	//implementation fileTree('opencv')
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.3'
    implementation 'org.javacord:javacord:3.1.2'
    runtimeOnly 'org.apache.logging.log4j:log4j-core:2.11.0'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    
    // https://mvnrepository.com/artifact/net.sourceforge.tess4j/tess4j
    implementation group: 'net.sourceforge.tess4j', name: 'tess4j', version: '5.1.0'
	
	// https://mvnrepository.com/artifact/net.dv8tion/JDA
	implementation 'net.dv8tion:JDA:5.0.0-alpha.11'

	// https://mvnrepository.com/artifact/com.jagrosh/jda-utilities-commons
	implementation 'com.jagrosh:jda-utilities-commons:3.0.5'
	
	// https://mvnrepository.com/artifact/pw.chew/jda-chewtils-command
	implementation 'pw.chew:jda-chewtils-command:1.19'
	
	// https://mvnrepository.com/artifact/org.openpnp/opencv
	implementation 'org.openpnp:opencv:4.5.1-2'
	
	// https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.5'
	
	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	implementation 'org.seleniumhq.selenium:selenium-java:4.4.0'
	
	// https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
	implementation 'io.github.bonigarcia:webdrivermanager:5.3.0'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task stage(dependsOn: ['build','shadowJar', 'clean', 'test'])
build.mustRunAfter clean
build.mustRunAfter test

jar {
    manifest{
        attributes 'Class-Path': '/libs/lib-all.jar', 'Main-Class': 'DSBot.Library'
    }
}